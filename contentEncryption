We use RSA encryption, but differently.
In PGP etc. the author encrypts with the readers key: so the encrypted message looks different for every reader.
But we want to ensure that everyone could become a reader, but only a limited number of users could become an author.
This is similar to the signing process.

Assume that content encrypted with the writers key (WK) can only be decrypted by the WK itself or the readers key (RK).

Encryption:
* Generate a new symmetric key (SK)
* Encrypt content C with SK to get encrypted content EC
* Encrypt SK with WK to get ESK
* Generate hash of ESK (#ESK) encrypt it with WK to get E#ESK
* Generate hash of EC (#EC) encrypt it with WK to get E#EC
* Store EC, ESK, E#EC, E#ESK

Decryption:
* Decrypt ESK with RK to get SK'
* Decrypt E#ESK with RK and compare the result with #SK' to ensure SK was generated by someone with the writers key
* Decrypt E#EC with RK and compare the result with #EC to ensure C was encrypted by someone with the writers key
* Decrypt EC with SK' to get C'